<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:SMT"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
        xmlns:xcad="clr-namespace:AvalonDock;assembly=AvalonDock"
        xmlns:xcadl="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
        xmlns:xcadt="clr-namespace:AvalonDock.Themes;assembly=AvalonDock.Themes.Expression"
        x:Class="SMT.MainWindow"
        mc:Ignorable="d"
        Title="SMT" Height="850" Width="1124" Icon="dmt_daquan_icon.ico" ResizeMode="CanResizeWithGrip">

    <Window.Resources>

        <local:ZKBBackgroundConverter x:Key="zkbBGConverter" />
        <local:TimeSpanConverter x:Key="timeSpanConverter" />

        <ObjectDataProvider x:Key="navigationEnumData" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:RoutingMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate x:Key="intelDataDataTemplate">
            <DockPanel>
                <TextBlock Text="{Binding IntelChannel, FallbackValue=''}" Foreground="Cyan" Padding="0,0,5,0" TextBlock.FontSize="{Binding MapConf.IntelTextSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" VerticalAlignment="Bottom" />
                <TextBlock Text="{Binding IntelTime, FallbackValue=TIME, StringFormat=HH:mm}" Foreground="Yellow" Padding="0,0,5,0" TextBlock.FontSize="{Binding MapConf.IntelTextSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" VerticalAlignment="Bottom" />
                <TextBox Background="Transparent" BorderThickness="0" Text="{Binding IntelString, FallbackValue=Intel Data, Mode=OneWay}" IsReadOnly="True" TextWrapping="Wrap" IsTabStop="False" FontSize="{Binding MapConf.IntelTextSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            </DockPanel>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Background="{DynamicResource MenuBackground}" Height="27" >
            <Menu Style="{DynamicResource ResourceKey={x:Type Menu}}">
                <MenuItem Header="File">
                    <MenuItem Header="Characters" Click="Characters_MenuItem_Click" />
                    <MenuItem Header="Preferences" Click="Preferences_MenuItem_Click" />
                    <MenuItem Header="Exit" Click="Exit_MenuItem_Click" />
                </MenuItem>

                <MenuItem Header="Data" >
                    <MenuItem Header="Force ESI Update" Click="ForceESIUpdate_MenuItem_Click" />
                </MenuItem>

                <MenuItem Header="View">
                    <MenuItem x:Name="miFullScreenToggle" Header="Full Screen" IsCheckable="True" IsChecked="False" Click="FullScreenToggle_MenuItem_Click"/>
                </MenuItem>
            </Menu>

            <Label Margin="30,0,0,0" Padding="7">Active Character:</Label>
            <ComboBox x:Name="CurrentActiveCharacterCombo" Width="180"  IsReadOnly="True" SelectionChanged="CurrentActiveCharacterCombo_Selected"  Height="18"/>
            <CheckBox x:Name="FollowCharacterChk" Margin="20,6,0,5" Content="Auto follow active character" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="False" Checked="FollowCharacterChk_Checked" Unchecked="FollowCharacterChk_Unchecked"/>
            <!--  this should probably be here instead -->

        </StackPanel>


        <StatusBar x:Name="AppStatusBar" DockPanel.Dock="Bottom" Margin="0,0,0,0" >
            <StatusBarItem>
                <TextBlock><Run Text="EVE Time:" /></TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="{Binding ServerTime, StringFormat=HH:mm}" Foreground="White" />
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <TextBlock><Run Text="Tranquility Version:" /></TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="{Binding ServerVersion}" Foreground="White" />
            </StatusBarItem>

            <Separator />

            <StatusBarItem>
                <TextBlock Text="{Binding NumPlayers}" Foreground="White" />
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="Players" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem MouseDoubleClick="StatusBarItem_MouseDoubleClick">
                <Ellipse x:Name="mqttStatusColor" Fill="Orange" Width="15" Height="15" />
            </StatusBarItem>
            <StatusBarItem x:Name="MqttStatusBarItem">
                <TextBlock x:Name="mqttStatus" Text="{Binding MqttStatus}" Foreground="White" />

            </StatusBarItem>
        </StatusBar>
        <xcad:DockingManager x:Name="dockManager">
            <xcad:DockingManager.Theme>
                <xcadt:ExpressionDarkTheme />
            </xcad:DockingManager.Theme>

            <xcadl:LayoutRoot>

                <xcadl:LayoutRoot.RightSide>
                    <xcadl:LayoutAnchorSide>
                        <xcadl:LayoutAnchorGroup>

                            <!--<xcadl:LayoutAnchorable Title="Anoms" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="AnomsContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="MainAnomGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="26" />
                                        <RowDefinition Height="26" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0">
                                        <Label Content="{Binding ANOMManager.ActiveSystem.SystemName}" FontSize="18" FontWeight="Bold" />
                                    </StackPanel>

                                    <DataGrid  x:Name="AnomSigList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" ItemsSource="{Binding ANOMManager.ActiveSystem.Anoms.Values}" HeadersVisibility="Column">

                                        <DataGrid.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type}" Value="Unknown">
                                                        <Setter Property="Background" Value="Red" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding State}" Value="State2">
                                                        <Setter Property="Background" Value="Green" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="SIG" Binding="{Binding Signature}" Width="*" />

                                            <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="*" />
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <StackPanel Grid.Row="2">
                                        <Button x:Name="btnClearAnomList" Content="Clear" Click="btnClearAnomList_Click" Margin="3"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="3">
                                        <Button x:Name="btnUpdateAnomList" Content="Update from Clipboard" Click="btnUpdateAnomList_Click" Margin="3" />
                                    </StackPanel>
                                </Grid>
                            </xcadl:LayoutAnchorable>-->

                            <xcadl:LayoutAnchorable Title="Map Colours" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="MapColoursContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>
                                        <xctk:PropertyGrid x:Name="ColoursPropertyGrid" AutoGenerateProperties="True" ShowSearchBox="False" ShowSortOptions="False">
                                            <xctk:PropertyGrid.CategoryGroupHeaderTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding}" Foreground="Black" />
                                                </DataTemplate>
                                            </xctk:PropertyGrid.CategoryGroupHeaderTemplate>
                                        </xctk:PropertyGrid>
                                        <Separator />
                                        <Button x:Name="ResetColourData" Click="ResetColourData_Click" Content="Reset Colours" Margin="0,3" ToolTip="Reset map colors to default."/>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Characters" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="CharactersContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>
                                        <DataGrid x:Name="CharactersList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" MouseDoubleClick="CharactersList_MouseDoubleClick" HeadersVisibility="Column" SelectionUnit="FullRow" GridLinesVisibility="None" IsSynchronizedWithCurrentItem="False" >

                                            <DataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Delete" Click="CharactersListMenuItemDelete_Click"/>
                                                </ContextMenu>
                                            </DataGrid.ContextMenu>


                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" CanUserReorder="False" Width="*" IsReadOnly="True" SortDirection="Ascending"/>
                                                <DataGridTextColumn Header="Location" Binding="{Binding Location}" CanUserReorder="False" Width="*" IsReadOnly="True"/>
                                                <DataGridTextColumn Header="Region" Binding="{Binding Region}" CanUserReorder="False" Width="*" IsReadOnly="True"/>
                                                <DataGridCheckBoxColumn Header="Broadcast" Binding="{Binding BroadcastLocation}" CanUserReorder="False" Width="*" IsReadOnly="False">
                                                    <DataGridCheckBoxColumn.CellStyle>
                                                        <Style>
                                                            <EventSetter Event="CheckBox.Checked" Handler="BroadcastChanged"/>
                                                            <EventSetter Event="CheckBox.Unchecked" Handler="BroadcastChanged"/>
                                                        </Style>
                                                    </DataGridCheckBoxColumn.CellStyle>
                                                    <DataGridCheckBoxColumn.ElementStyle>
                                                        <Style TargetType="CheckBox">
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                                        </Style>
                                                    </DataGridCheckBoxColumn.ElementStyle>
                                                </DataGridCheckBoxColumn>
                                                <DataGridCheckBoxColumn Header="Dangerzone" Binding="{Binding DangerzoneActive}"  CanUserReorder="False" Width="*" IsReadOnly="False">
                                                    <DataGridCheckBoxColumn.CellStyle>
                                                        <Style>
                                                            <EventSetter Event="CheckBox.Checked" Handler="DangerzoneChanged"/>
                                                            <EventSetter Event="CheckBox.Unchecked" Handler="DangerzoneChanged"/>
                                                        </Style>
                                                    </DataGridCheckBoxColumn.CellStyle>
                                                    <DataGridCheckBoxColumn.ElementStyle>
                                                        <Style TargetType="CheckBox">
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                                        </Style>
                                                    </DataGridCheckBoxColumn.ElementStyle>
                                                </DataGridCheckBoxColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel>
                                            <CheckBox Content="Show characters on map" IsChecked="{Binding MapConf.ShowCharacterNamesOnMap}" Margin="3" ToolTip="Show or hide character locations on the map."/>
                                            <Button x:Name="btn_AddCharacter" Click="btn_AddCharacter_Click" Content="Add Character" Margin="3" ToolTip="Add a character to DMT using the ESI."/>
                                        </StackPanel>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Corp Characters" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="CorpCharactersContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>
                                        <DataGrid  x:Name="CorpCharactersList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" MouseDoubleClick="CorpCharactersList_MouseDoubleClick" HeadersVisibility="Column" SelectionUnit="FullRow" GridLinesVisibility="None" IsSynchronizedWithCurrentItem="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" CanUserReorder="False" Width="*" IsReadOnly="True"/>
                                                <DataGridTextColumn Header="Location" Binding="{Binding Location}" CanUserReorder="False" Width="*" IsReadOnly="True"/>
                                                <DataGridTextColumn Header="Region" Binding="{Binding Region}" CanUserReorder="False" Width="*" IsReadOnly="True"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel>
                                            <CheckBox Content="Show all corp characters on map" IsChecked="{Binding MapConf.ShowDMTCharactersOnMap}" Margin="3" ToolTip="Show or hide corp character locations on the map."/>
                                            <CheckBox Content="Show online characters only" IsChecked="{Binding ShowOnlinePlayers}" Margin="3" ToolTip="Only display online corp characters on the map."/>
                                            <!-- <CheckBox x:Name="ShowOnlineChk" Margin="5,-1,5,0" Content="Show online characters" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding ShowOnlinePlayers}" Checked="ShowOnline_Checked" Unchecked="ShowOnline_Checked"/>
                                            this doesn't work because of missing stuff ¯\_(ツ)_/¯ so i replacd it with something that compiles but doesn't have any functionality -->
                                        </StackPanel>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Jump Bridges" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="JumpBridgesContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="JumpBridgeGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                                        <Label Content="Gate Search Filter:" />
                                        <TextBox x:Name="GateSearchFilter" Text=" » " Width="167" Margin="2"/>
                                    </StackPanel>
                                    <Button x:Name="ImportJumpGatesBtn" Content="Find Gates" Click="ImportJumpGatesBtn_Click" Margin="3" Grid.Row="1" ToolTip="Try to find Jump Bridges using the ESI."/>
                                    <Button x:Name="ClearJumpGatesBtn" Content="Clear Gates" Click="ClearJumpGatesBtn_Click" Margin="3" Grid.Row="2" ToolTip="Delete all Jump Bridges from the list."/>
                                    <Button x:Name="ImportPasteJumpGatesBtn" Content="Import From Clipboard" Click="ImportPasteJumpGatesBtn_Click" Margin="3" Grid.Row="3" ToolTip="Import correctly formatted Jump Bridges from your clipboard."/>
                                    <Button x:Name="SyncDMTBtn" Content="Sync From DMT" Click="SyncDMTBtn_Click" Margin="3" Grid.Row="4" ToolTip="Sync Jump Bridges from the DMT server."/>
                                    <Button x:Name="ExportJumpGatesBtn" Content="Export Jump Bridges" Click="ExportJumpGatesBtn_Click"  Margin="3" Grid.Row="5" ToolTip="Save all Jump Bridges to a text file."/>

                                    <Label Content="Ansiblex Gates" Grid.Row="6" />
                                    <DataGrid x:Name="JumpBridgeList" Margin="2" Grid.Row="7" AutoGenerateColumns="False" AreRowDetailsFrozen="True" IsReadOnly="True" SelectionUnit="FullRow" SelectedItem="{Binding SelectedItemProperty, Mode=TwoWay}">

                                        <DataGrid.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FromID}" Value="0">
                                                        <Setter Property="Background" Value="#222" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding ToID}" Value="0">
                                                        <Setter Property="Background" Value="#222" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Disabled}" Value="True">
                                                        <Setter Property="Background" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Delete" Click="DeleteJumpGateMenuItem_Click" />
                                                <MenuItem Header="Enable/Disable" Click="EnableDisableJumpGateMenuItem_Click" />
                                            </ContextMenu>
                                        </DataGrid.ContextMenu>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="From" Binding="{Binding From}" Width="*" />
                                            <DataGridTextColumn Header="To" Binding="{Binding To}" Width="*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </xcadl:LayoutAnchorable>

                            <xcadl:LayoutAnchorable Title="Route" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="RouteContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid x:Name="MainRouteGrid">
                                    <ScrollViewer>
                                        <StackPanel>

                                            <!--<GroupBox Header="Navigation Options"> -->
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label Content="Mode:" />
                                                    <ComboBox ItemsSource="{Binding Source={StaticResource navigationEnumData}}" SelectedItem="{Binding ActiveCharacter.NavigationMode, ElementName=RegionRC}" Margin="2" Width="150" Background="{DynamicResource ButtonBackground}"/>
                                                </StackPanel>

                                                <CheckBox Content="Use Ansiblex Gates" IsChecked="{Binding ActiveCharacter.UseAnsiblexGates, ElementName=RegionRC}" Margin="2" ToolTip="Allow use of Jump Bridges when calculating your route."/>
                                            </StackPanel>
                                            <!-- GroupBox> -->
                                            <!-- Header="WayPoints"> -->
                                            <StackPanel>
                                                <ListBox ItemsSource="{Binding ActiveCharacter.Waypoints, ElementName=RegionUC}" MinHeight="50" Margin="2" Background="{DynamicResource ButtonBackground}"/>
                                                <StackPanel Orientation="Horizontal" Margin="2">
                                                    <dotNetKitControls:AutoCompleteComboBox x:Name="RouteSystemDropDownAC" FontSize="12" Width="156" />
                                                    <Button x:Name="AddWaypointsBtn" Click="AddWaypointsBtn_Click"  Content="Add Waypoint" Margin="3" ToolTip="Add a waypoint."/>
                                                </StackPanel>

                                                <Button x:Name="ReCalculateRouteBtn" Click="ReCalculateRouteBtn_Click"  Content="Recalculate" Margin="3" ToolTip="Recalculate your route using the listed systems."/>
                                                <Button x:Name="ClearWaypointsBtn" Click="ClearWaypointsBtn_Click" Content="Clear All" Margin="3" ToolTip="Clear all systems from your route."/>
                                            </StackPanel>
                                            <!-- </GroupBox> -->

                                            <!-- <GroupBox Header="Route">-->
                                            <StackPanel>
                                                <ListBox ItemsSource="{Binding ActiveCharacter.ActiveRoute, ElementName=RegionUC}" MinHeight="50" Background="{DynamicResource ButtonBackground}"/>

                                                <StackPanel Orientation="Horizontal" Margin="2">
                                                    <Label Content="Total number of jumps:" />
                                                    <Label Content="{Binding ActiveCharacter.ActiveRoute.Count, ElementName=RegionUC}" />
                                                </StackPanel>
                                                <Button x:Name="CopyRouteBtn" Click="CopyRouteBtn_Click" Content="Copy Route" Margin="3" ToolTip="Copy route to your clipboard."/>
                                            </StackPanel>
                                            <!-- </GroupBox> -->
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </xcadl:LayoutAnchorable>

                            <!--   Temp Disabled   <xcadl:LayoutAnchorable Title="Jump Planner" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="JumpPlannerContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                    <Grid x:Name="JumpPlannerGrid">
                                        <ScrollViewer Background="#FFE5E5E5">
                                            <StackPanel>
                                                <Label Content="Jump Planner Options" />
                                                <ComboBox x:Name="JPShipType" />
                                                <CheckBox x:Name="JPUseGates" Content="Use Gates" />

                                                <Button x:Name="JPSuggestRoute" Click="JPSuggestRoute_Click" Content="Suggest Route" Margin="3"/>
                                                <ListBox x:Name="JPSuggestedRoute" />
                                            </StackPanel>
                                        </ScrollViewer>
                                    </Grid>
                                </xcadl:LayoutAnchorable>
-->

                            <xcadl:LayoutAnchorable Title="Thera" CanClose="False" CanAutoHide="True" CanHide="false" ContentId="TheraContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>

                                        <DataGrid  x:Name="TheraConnectionsList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" MouseDoubleClick="TheraConnectionsList_MouseDoubleClick" HeadersVisibility="Column" GridLinesVisibility="None" SelectionUnit="FullRow">
                                            <DataGrid.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding EstimatedEOL}" Value="critical">
                                                            <Setter Property="Background" Value="Red" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.CellStyle>

                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="System" Binding="{Binding System}" Width="*" />
                                                <DataGridTextColumn Header="Region" Binding="{Binding Region}" Width="*" />
                                                <DataGridTextColumn Header="In Sig" Binding="{Binding InSignatureID}" Width="*" />
                                                <DataGridTextColumn Header="Out Sig" Binding="{Binding OutSignatureID}" Width="*" />
                                                <DataGridTextColumn Header="EOL Status" Binding="{Binding EstimatedEOL}" Width="*" />
                                            </DataGrid.Columns>
                                        </DataGrid>

                                        <Button x:Name="btn_UpdateThera" Click="btn_UpdateThera_Click"  Content="Update Connections" Margin="3" ToolTip="Update Thera connections from the EVE-Scout website."/>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>
                            <xcadl:LayoutAnchorable Title="SOV Campaigns" CanClose="False" CanAutoHide="True" CanHide="false" ContentId="SOVCampaignsID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>

                                        <DataGrid x:Name="SovCampaignList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="SovCampaignList_MouseDoubleClick" HeadersVisibility="Column" >

                                            <DataGrid.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">

                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsActive, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Value="true">
                                                            <Setter Property="Background" Value="DarkRed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.CellStyle>


                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="System" Binding="{Binding Path=System, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                                <DataGridTextColumn Header="Region" Binding="{Binding Path=Region, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                                <DataGridTextColumn Header="Type" Binding="{Binding Path=Type, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                                <DataGridTemplateColumn  Header="Defenders Score"  Width="*" >
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <ProgressBar Value="{Binding Path=DefendersScore, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="1"  Height="13" ToolTipService.ToolTip="{Binding State}" ToolTipService.InitialShowDelay="100" ToolTipService.BetweenShowDelay="100"/>
                                                                <TextBlock Text="{Binding Path=DefendersScore, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" IsHitTestVisible="False"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTextColumn Header="Starts in" Binding="{Binding Path=TimeToStart, Mode=OneTime, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource timeSpanConverter}}" Width="*"/>
                                                <DataGridTextColumn Header="Defenders" Binding="{Binding Path=DefendingAllianceName, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>
                            <xcadl:LayoutAnchorable Title="Trig Invasions" CanClose="False" CanAutoHide="True" CanHide="false" ContentId="TrigInvasionsID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <StackPanel>

                                        <DataGrid x:Name="TrigInvasionsList" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" IsReadOnly="True" MouseDoubleClick="TrigInvasionsList_MouseDoubleClick" HeadersVisibility="Column">

                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="System" Binding="{Binding Path=SystemName, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                                <DataGridTextColumn Header="Status" Binding="{Binding Path=Status, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                                <DataGridTextColumn Header="Sec" Binding="{Binding Path=DerivedSecurityStatus, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}" Width="*" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </StackPanel>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>
                            <xcadl:LayoutAnchorable Title="Fleet" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="FleetContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <ScrollViewer>
                                    <DataGrid  x:Name="FleetMembersList"  Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" MouseDoubleClick="CharactersList_MouseDoubleClick" HeadersVisibility="Column" SelectionUnit="FullRow" GridLinesVisibility="None" IsSynchronizedWithCurrentItem="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" CanUserReorder="False" Width="*" />
                                            <DataGridTextColumn Header="Location" Binding="{Binding Location}" CanUserReorder="False" Width="*" />
                                            <DataGridTextColumn Header="Region" Binding="{Binding Region}" CanUserReorder="False" Width="*" />
                                            <DataGridTextColumn Header="ShipType" Binding="{Binding ShipType}" CanUserReorder="False" Width="*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </ScrollViewer>
                            </xcadl:LayoutAnchorable>

                        </xcadl:LayoutAnchorGroup>
                    </xcadl:LayoutAnchorSide>
                </xcadl:LayoutRoot.RightSide>
                <xcadl:LayoutPanel>
                    <xcadl:LayoutAnchorablePaneGroup DockWidth="250" DockMinWidth="250" Orientation="Vertical">
                        <xcadl:LayoutAnchorablePane>
                            <xcadl:LayoutAnchorable x:Name="ZKBLayoutAnchorable"  Title="ZKB Feed" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="ZKBContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid>
                                    <ScrollViewer>
                                        <StackPanel CanVerticallyScroll="True" ScrollViewer.CanContentScroll="True">
                                            <CheckBox Content="Selected region only" x:Name="ZKBFeedFilterViewChk" IsChecked="True" Checked="ZKBFeedFilterViewChk_Checked" Unchecked="ZKBFeedFilterViewChk_Checked" Margin="3" />
                                            <DataGrid x:Name="ZKBFeed" Grid.Row="1" AreRowDetailsFrozen="True" AutoGenerateColumns="False" CanUserAddRows="False" MouseDoubleClick="ZKBFeed_MouseDoubleClick_1" HeadersVisibility="Column" SelectionUnit="FullRow" GridLinesVisibility="None">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="System" Binding="{Binding SystemName}" Width="30*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                    <DataGridTextColumn Header="Alliance" Binding="{Binding VictimAllianceName}" Width="40*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                    <DataGridTextColumn Header="Ship Type" Binding="{Binding ShipType}" Width="30*" IsReadOnly="True" CanUserReorder="False" CanUserSort="False" />
                                                </DataGrid.Columns>
                                                <DataGrid.RowStyle>
                                                    <Style TargetType="{x:Type DataGridRow}">
                                                        <Setter Property="Background" Value="{Binding Converter={StaticResource zkbBGConverter}}" />
                                                    </Style>
                                                </DataGrid.RowStyle>

                                                <DataGrid.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Show System" Click="ZKBContexMenu_ShowSystem_Click" />
                                                        <MenuItem Header="Open Kill on ZKB" Click="ZKBContexMenu_ShowZKB_Click" />
                                                    </ContextMenu>
                                                </DataGrid.ContextMenu>
                                            </DataGrid>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                            </xcadl:LayoutAnchorable>
                            <xcadl:LayoutAnchorable x:Name="ChatLayoutAnchorable"  Title="Chat" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="ChatContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="25" />
                                    </Grid.RowDefinitions>
                                    <ListView x:Name="RawChatBox" Margin="0,2" MouseDoubleClick="RawChatBox_MouseDoubleClick" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="0" ItemTemplate="{StaticResource intelDataDataTemplate}" />
                                    <Button Content="Clear Chat" Grid.Row="1" x:Name="ClearChatBtn" Click="ClearChatBtn_Click" />
                                </Grid>
                            </xcadl:LayoutAnchorable>
                            <xcadl:LayoutAnchorable x:Name="IntelLayoutAnchorable"  Title="Intel" CanClose="False" CanAutoHide="True" CanHide="False" ContentId="IntelContentID" AutoHideMinHeight="200" AutoHideMinWidth="280">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="25" />
                                    </Grid.RowDefinitions>
                                    <ListView x:Name="RawIntelBox" Margin="0,2" MouseDoubleClick="RawIntelBox_MouseDoubleClick" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="0" ItemTemplate="{StaticResource intelDataDataTemplate}" />
                                    <Button Content="Clear Intel" Grid.Row="1" x:Name="ClearIntelBtn" Click="ClearIntelBtn_Click" />
                                </Grid>
                            </xcadl:LayoutAnchorable>
                        </xcadl:LayoutAnchorablePane>
                    </xcadl:LayoutAnchorablePaneGroup>

                    <xcadl:LayoutDocumentPane ShowHeader="True" AllowDuplicateContent="False">
                        <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="UniverseContentID" Title="Regions">
                            <Grid>
                                <local:RegionsViewControl x:Name="RegionsViewUC" />
                            </Grid>
                        </xcadl:LayoutDocument>

                        <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="MapRegionContentID" Title="Region">
                            <local:RegionControl x:Name="RegionUC" />
                        </xcadl:LayoutDocument>

                        <xcadl:LayoutDocument CanClose="False" CanFloat="True" ContentId="FullUniverseViewID" Title="Universe">
                            <local:UniverseControl x:Name="UniverseUC" />
                        </xcadl:LayoutDocument>
                    </xcadl:LayoutDocumentPane>

                </xcadl:LayoutPanel>


            </xcadl:LayoutRoot>
        </xcad:DockingManager>
    </DockPanel>
</Window>